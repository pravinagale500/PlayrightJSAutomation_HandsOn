# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Login Test
- Location: D:\PlayrightJSAutomation_HandsOn\tests\APIRequest.spec.js:23:1

# Error details

```
Error: expect(received).toBeTruthy()

Received: false
    at D:\PlayrightJSAutomation_HandsOn\tests\APIRequest.spec.js:15:28
```

# Test source

```ts
   1 | const {test,expect,request} = require ('@playwright/test');
   2 |
   3 | const loginPayload = require('../resources/loginPayload.json');
   4 |
   5 | let token;
   6 | // const apiContext = await request.newContext();
   7 |
   8 | test.beforeAll(async () =>{
   9 | const apiContext = await request.newContext();
  10 | const loginResponse = await apiContext.post("https://rahulshettyacademy.com/client/auth/login",{
  11 | data: loginPayload
  12 |
  13 | });
  14 |
> 15 | expect(loginResponse.ok()).toBeTruthy();
     |                            ^ Error: expect(received).toBeTruthy()
  16 | const loginResponseJSON = await loginResponse.json();
  17 | token = await loginResponseJSON.token;
  18 | console.log(token);
  19 | });
  20 |
  21 |
  22 |
  23 | test("Login Test", async ({page})=>{
  24 |
  25 | page.addInitScript(value=>
  26 | {
  27 |   window.localStorage.setItem('token', value)
  28 |
  29 | },token);
  30 |
  31 |
  32 |
  33 |     await page.goto('https://rahulshettyacademy.com/client');
  34 |     // await page.getByPlaceholder("email@example.com").fill(email);
  35 |     // await page.getByPlaceholder("enter your passsword").fill('Iamking@000');
  36 |     // await page.getByRole("button",{name: 'Login'}).click();
  37 |
  38 |     await page.getByRole("listitem").getByRole("button",{name:"Cart"}).click();
  39 |
  40 |
  41 | })
```