# name: Playwright Tests
# on:
#    push:
#      branches: [ main, master]
#    pull_request: 
#      branches: [ main, master]
# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-node@v4
#       with:
#         node-version: 18
#     - name: Install dependencies
#       run: npm ci
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps
#     - name: Run Playwright tests
#       run: npx playwright test
#     - uses: actions/upload-artifact@v4
#      # if: always()
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30   
name: Playwright Tests (Docker Focal)
on:
  push:
    branches: [ main, master]
  pull_request:
    branches: [ main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build and Run Docker Container
      run: |
        docker build -f Dockerfile.focal -t plimage .
        docker run --name plcontainer plimage
      continue-on-error: true # Stop workflow if the docker run command fails (due to tests failing in Dockerfile)
    - name: Copy Allure Results (if they exist at root)
      run: |
        docker cp plcontainer:/allure-results allure_results || true # Ignore error if directory doesn't exist yet
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: allure_results/
        retention-days: 30
    - name: Copy Playwright Report (if it exists)
      run: |
        docker cp plcontainer:/playwright-report playwright-report || true # Ignore error if directory doesn't exist
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30




         